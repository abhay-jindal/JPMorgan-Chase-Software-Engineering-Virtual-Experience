From 1665d57f4a3472e70e830951b4773edd04d9f8e1 Mon Sep 17 00:00:00 2001
From: Abhay Jindal <jindal1808@gmail.com>
Date: Fri, 7 May 2021 21:41:53 +0530
Subject: [PATCH] Create Patch File

---
 JPMC-tech-task-3-PY3/src/DataManipulator.ts | 37 ++++++++++++++-------
 JPMC-tech-task-3-PY3/src/Graph.tsx          | 25 ++++++++------
 2 files changed, 40 insertions(+), 22 deletions(-)

diff --git a/JPMC-tech-task-3-PY3/src/DataManipulator.ts b/JPMC-tech-task-3-PY3/src/DataManipulator.ts
index f6b15ff..25778e9 100644
--- a/JPMC-tech-task-3-PY3/src/DataManipulator.ts
+++ b/JPMC-tech-task-3-PY3/src/DataManipulator.ts
@@ -1,20 +1,33 @@
 import { ServerRespond } from './DataStreamer';
 
 export interface Row {
-  stock: string,
-  top_ask_price: number,
+  price_abc: number,
+  price_def: number,
+  ratio: number,
+  upper_bound: number,
+  lower_bound: number,
+  trigger_alert: number | undefined,
   timestamp: Date,
 }
 
 
 export class DataManipulator {
-  static generateRow(serverResponds: ServerRespond[]): Row[] {
-    return serverResponds.map((el: any) => {
-      return {
-        stock: el.stock,
-        top_ask_price: el.top_ask && el.top_ask.price || 0,
-        timestamp: el.timestamp,
-      };
-    })
-  }
-}
+    static generateRow(serverResponds: ServerRespond[]): Row[] {
+        const priceABC = (serverResponds[0].top_ask.price + serverResponds[0].top_bid.price) / 2;
+        const priceDEF = (serverResponds[1].top_ask.price + serverResponds[1].top_bid.price) / 2;
+        const ratio = priceABC / priceDEF;
+        const upper_bound = 1 + 0.01;
+        const lower_bound = 1 - 0.01;
+        return serverResponds.map((el: any) => {
+          return {
+              price_abc: priceABC,
+              price_def: priceDEF,
+              ratio,
+              timestamp: serverResponds[0].timestamp > serverResponds[1].timestamp ? serverResponds[0].timestamp : serverResponds[1].timestamp,
+              upper_bound: upper_bound,
+              lower_bound: lower_bound,
+              trigger_alert: (ratio > upper_bound || ratio < lower_bound) ? ratio : undefined,
+          };
+        })
+       }
+    }
diff --git a/JPMC-tech-task-3-PY3/src/Graph.tsx b/JPMC-tech-task-3-PY3/src/Graph.tsx
index 58fb997..85faf76 100644
--- a/JPMC-tech-task-3-PY3/src/Graph.tsx
+++ b/JPMC-tech-task-3-PY3/src/Graph.tsx
@@ -23,9 +23,12 @@ class Graph extends Component<IProps, {}> {
     const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
 
     const schema = {
-      stock: 'string',
-      top_ask_price: 'float',
-      top_bid_price: 'float',
+      price_abc: 'float',
+      price_def: 'float',
+      ratio: 'float',
+      upper_bound: 'float',
+      lower_bound: 'float',
+      trigger_alert: 'float',
       timestamp: 'date',
     };
 
@@ -36,13 +39,15 @@ class Graph extends Component<IProps, {}> {
       // Load the `table` in the `<perspective-viewer>` DOM reference.
       elem.load(this.table);
       elem.setAttribute('view', 'y_line');
-      elem.setAttribute('column-pivots', '["stock"]');
       elem.setAttribute('row-pivots', '["timestamp"]');
-      elem.setAttribute('columns', '["top_ask_price"]');
+      elem.setAttribute('columns', '["ratio", "lower_bound", "upper_bound", "trigger_alert"]');
       elem.setAttribute('aggregates', JSON.stringify({
-        stock: 'distinctcount',
-        top_ask_price: 'avg',
-        top_bid_price: 'avg',
+        ratio: 'avg',
+        price_abc: 'avg',
+        price_def: 'avg',
+        upper_bound: 'avg',
+        lower_bound: 'avg',
+        trigger_alert: 'avg',
         timestamp: 'distinct count',
       }));
     }
@@ -50,9 +55,9 @@ class Graph extends Component<IProps, {}> {
 
   componentDidUpdate() {
     if (this.table) {
-      this.table.update(
+      this.table.update([
         DataManipulator.generateRow(this.props.data),
-      );
+      ]);
     }
   }
 }
-- 
2.29.0.windows.1

